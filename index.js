#!/usr/bin/env node
// Generated by LiveScript 1.3.0
(function(){
  var docopt, path, fs, shelljs, _, doc, getOption, o, number, dry, language, directory, type, nprofiles, res$, i$, ridx$, ardir, len$, i, dir, components, programname, profilename, plugin, join$ = [].join;
  docopt = require('docopt').docopt;
  path = require('path');
  fs = require('fs');
  shelljs = require('shelljs');
  _ = require('underscore');
  doc = "Usage:\n        apparmor-run gen-profiles [-d | --dry] [-n N] -l LANGUAGE -t DIRECTORY [ -y TYPE ]\n        apparmor-run del-profiles -t DIRECTORY\n        apparmor-run -h | --help \n\nOptions:\n        -n, --number N                  Number of profiles to generate (defaults to 1)\n        -l, --language LANGUAGE         Use a specific language profile (currently `C` or `Matlab`)\n        -t, --target DIRECTORY          Generate profiles for DIRECTORY/LANGUAGE/ID/main\n        -y, --type TYPE                 Use a specific version of the profile (default `main`)";
  getOption = function(a, b, def, o){
    if (!o[a] && !o[b]) {
      return def;
    } else {
      return o[b];
    }
  };
  o = docopt(doc);
  number = getOption('-n', '--number', 1, o);
  dry = o['-d'] || o['--dry'];
  language = getOption('-l', '--language', null, o);
  directory = getOption('-t', '--target', null, o);
  type = getOption('-y', '--type', 'main', o);
  res$ = [];
  for (i$ = 1; i$ <= number; ++i$) {
    ridx$ = i$;
    res$.push(ridx$);
  }
  nprofiles = res$;
  ardir = "/etc/apparmor.d";
  for (i$ = 0, len$ = nprofiles.length; i$ < len$; ++i$) {
    i = nprofiles[i$];
    dir = directory + "/" + i;
    dir = path.resolve(dir);
    components = dir.split('/');
    components = _.filter(components, fn$);
    programname = '/' + join$.call(components.concat(['main']), '/');
    profilename = join$.call(components.concat(['main']), '.');
    if (o['gen-profiles']) {
      if (dry) {
        console.log("Writing to " + ardir + "/" + profilename);
      } else {
        plugin = require("./lang/" + language)[type];
        plugin(programname).to(ardir + "/" + profilename);
      }
    }
    if (o['del-profiles']) {
      if (dry) {
        console.log("Removing " + ardir + "/" + profilename);
      } else {
        shelljs.rm('-f', "/" + ardir + "/" + profilename);
      }
    }
  }
  function fn$(it){
    return it !== '';
  }
}).call(this);
